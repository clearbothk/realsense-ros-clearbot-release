name: Test build DEB package
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - "clearbot/realsense2_camera"

jobs:
  build-debian:
    runs-on: ARM64
    container: asia-docker.pkg.dev/clearbot-360312/clearbot-public/ros-foxy-cuda:latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup apt repo
        env:
          APTSERVER_USER: ${{ secrets.APTSERVER_USER }}
          APTSERVER_PASSWORD: ${{ secrets.APTSERVER_PASSWORD }}
        run: |
          sudo apt update
          sudo apt install -y wget software-properties-common
          wget -qO - https://aptserver.clearbot.dev/pubkey | sudo apt-key add -
          echo "machine https://aptserver.clearbot.dev\nlogin $APTSERVER_USER\npassword $APTSERVER_PASSWORD" >> /etc/apt/auth.conf.d/clearbot.conf
          sudo add-apt-repository 'deb https://aptserver.clearbot.dev focal main'
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
          sudo add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u
        working-directory: ./
      - name: Install dependencies
        run: |
          sudo apt -y update
          sudo apt install -y dh-make fakeroot opencv-libs opencv-main opencv-python opencv-dev libboost-all-dev ros-foxy-clearbot-cv-bridge ros-foxy-image-transport ros-foxy-realsense2-camera-msgs ros-foxy-realsense2-description libeigen3-dev, ros-foxy-builtin-interfaces, ros-foxy-diagnostic-updater, ros-foxy-geometry-msgs, ros-foxy-image-transport, ros-foxy-launch-ros, librealsense2-utils, librealsense2-dev, ros-foxy-nav-msgs, ros-foxy-rclcpp, ros-foxy-rclcpp-components, ros-foxy-realsense2-camera-msgs, ros-foxy-sensor-msgs, ros-foxy-std-msgs, ros-foxy-tf2, ros-foxy-tf2-ros, ros-foxy-ros-workspace
        working-directory: ./
      - name: fakeroot
        run: fakeroot debian/rules binary
        working-directory: ./
      - name: Debian file
        id: deb-file-name
        run: |
          cd .. && echo DEB_FILE="$(pwd)/$(find . -name "ros-foxy-clearbot-realsense2-camera*.deb" | sed -r 's/^.{2}//')" >> "$GITHUB_OUTPUT"
        working-directory: ./
      - name: Export deb file artifact
        uses: actions/upload-artifact@v3
        with:
          name: built deb file
          path: ${{ steps.deb-file-name.outputs.DEB_FILE }}
          if-no-files-found: error
